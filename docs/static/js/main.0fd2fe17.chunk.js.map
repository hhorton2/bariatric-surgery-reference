{"version":3,"sources":["components/Accordion.tsx","components/PostOpDiet/WeekOneDetails.tsx","components/PostOpDiet/PostOpDiet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Accordion","props","AccordionSummary","expandIcon","id","Typography","summary","AccordionDetails","children","WeekOneDetails","variant","style","fontWeight","background","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","sx","border","PostOpDiet","DrawerHeader","styled","theme","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","App","useTheme","useState","open","setOpen","postOpDietName","openPage","setOpenPage","Box","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","onClick","Drawer","width","flexShrink","boxSizing","anchor","direction","Divider","List","map","text","index","ListItem","button","ListItemText","primary","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fd2fe17.chunk.js","sourcesContent":["import {\n  Accordion as MUIAccordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport React from \"react\";\n\nexport type AccordionProps = {\n  children?: JSX.Element | undefined;\n  summary: string;\n};\nexport default function Accordion(props: AccordionProps): JSX.Element {\n  return (\n    <MUIAccordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography>{props.summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>{props.children}</AccordionDetails>\n    </MUIAccordion>\n  );\n}\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\n\nexport default function WeekOneDetails(): JSX.Element {\n  return (\n    <>\n      <Typography variant={\"h6\"}>Full Liquids</Typography>\n      <Typography variant={\"subtitle1\"}>\n        <span style={{ fontWeight: \"bold\" }}>Goal:</span> Protect the small\n        stomach pouch,{\" \"}\n        <span style={{ background: \"yellow\" }}>STAY HYDRATED</span>\n      </Typography>\n      <Typography variant={\"subtitle1\"}>\n        <span style={{ fontWeight: \"bold\" }}> Guidelines: </span>\n      </Typography>\n      <Typography variant={\"subtitle1\"}>\n        When you go home from the hospital, your first priority is to drink\n        enough fluid to prevent dehydration. Remember that protein drinks count\n        as liquids.\n      </Typography>\n      <Typography variant={\"body1\"}>\n        <ul>\n          <li>\n            Start with 1-2 oz. per feeding & progress to 4 oz. per meal by the\n            2nd week, as tolerated.\n          </li>\n          <li>\n            Gradually increase protein intake, as tolerated, to a goal of 60-80\n            grams daily. You may include a Protein supplement 1-2 times a day\n            during this phase of your diet.\n          </li>\n          <li>\n            Between meals, sip on non-carbonated, calorie-free, caffeine-free\n            liquids; 2-3 oz. at a time.\n          </li>\n          <li>\n            Combining all liquids, you should aim for a minimum of 64 oz. (8\n            cups) fluid daily.\n          </li>\n          <li>\n            Consume at least 60 grams protein and 64 ounces of liquids every 24\n            hours\n          </li>\n        </ul>\n      </Typography>\n      <Typography variant={\"subtitle1\"}>\n        It is not uncommon to feel a sensation of fullness from liquids after\n        surgery. This may limit your ability or desire to take the goal volumes\n        in the first several days after surgery. As you progress, you should\n        find it easier to meet the daily goals. For best tolerance, do not use\n        straws, take small sips, and start with room temperature liquids.\n      </Typography>\n      <br />\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Food Category</TableCell>\n              <TableCell>Foods Recommended</TableCell>\n              <TableCell>Foods NOT Recommended</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell>Thin clear & full liquids </TableCell>\n              <TableCell>\n                <ul>\n                  <li>Fat-free milk</li>\n                  <li>unsweetened almond milk</li>\n                  <li>soy milk</li>\n                  <li>no sugar added fruit icies & popsicles</li>\n                  <li>\n                    sugar-free low-fat puddings low fat yogurt (no fruit pieces)\n                  </li>\n                  <li>\n                    sugar free Jell-O Protein water/shakes vegetable juice\n                  </li>\n                  <li>\n                    Unsweetened fruit juices (limit fruit juice to 4 ounces per\n                    day)\n                  </li>\n                  <li>\n                    Crystal Light or equivalent/Propel water with lemon or lime\n                    juice\n                  </li>\n                  <li>\n                    Chicken/Beef broth, Bone Broth, strained cream-based soups\n                    (protein powder may be added to soups to increase protein).\n                  </li>\n                  <li>\n                    Runny Cream of wheat/creamed potatoes/runny grits (must be\n                    so thin they will run off the spoon)\n                  </li>\n                </ul>\n              </TableCell>\n              <TableCell>\n                <ul>\n                  <li>Sugar-sweetened liquids</li>\n                  <li>whole milk</li>\n                  <li>sweetened condensed milk</li>\n                  <li>chocolate milk made with added sugar</li>\n                  <li>carbonated beverages</li>\n                  <li>sugar-sweetened popsicles or fruit ices</li>\n                  <li>milkshakes</li>\n                  <li>sugar-sweetened fruit smoothies</li>\n                  <li>ice cream</li>\n                  <li>sherbet</li>\n                  <li>frozen yogurt</li>\n                  <li>alcohol</li>\n                  <li>spicy drinks</li>\n                  <li>caffeine</li>.\n                </ul>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport Accordion from \"../Accordion\";\nimport WeekOneDetails from \"./WeekOneDetails\";\n\nexport default function PostOpDiet(): JSX.Element {\n    return (\n        <>\n            <Accordion summary={\"Week 1\"}>\n                <WeekOneDetails/>\n            </Accordion>\n            <Accordion summary={\"Week 2\"}></Accordion>\n            <Accordion summary={\"Week 3 and 4\"}></Accordion>\n            <Accordion summary={\"1 Month\"}></Accordion>\n            <Accordion summary={\"2 Months and Beyond\"}></Accordion>\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  Box,\n  IconButton,\n  List,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Drawer from \"@mui/material/Drawer\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport PostOpDiet from \"./components/PostOpDiet/PostOpDiet\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n\nfunction App() {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const postOpDietName = \"Post-op Diet\";\n  const [openPage, setOpenPage] = useState(postOpDietName);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {openPage}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: 240,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: 240,\n            boxSizing: \"border-box\",\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <Typography>Navigation</Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <List>\n          {[postOpDietName].map((text, index) => (\n            <ListItem\n              button\n              key={text}\n              onClick={() => {\n                setOpenPage(text);\n                setOpen(false);\n              }}\n            >\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <div style={{ marginTop: 5 }}>\n        {openPage === postOpDietName && <PostOpDiet />}\n      </div>\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}